{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "Column that displays a tree node, for `cosmoz-omnitable`.",
      "summary": "",
      "path": "cosmoz-omnitable-treenode-column.js",
      "properties": [
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 12,
              "column": 3
            },
            "end": {
              "line": 15,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_titleChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "valuePath",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 17,
              "column": 3
            },
            "end": {
              "line": 19,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "If the column should be disabled until enabled with enabledColumns",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 24,
              "column": 3
            },
            "end": {
              "line": 28,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_disabledChanged\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "editable",
          "type": "boolean | null | undefined",
          "description": "If true, the column will be editable by using an input element for rendering.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 33,
              "column": 3
            },
            "end": {
              "line": 36,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_editableChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "externalValues",
          "type": "boolean | null | undefined",
          "description": "Values to filter this column will be managed outside of omnitable",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 41,
              "column": 3
            },
            "end": {
              "line": 45,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_externalValuesChanged\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "filter",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 3
            },
            "end": {
              "line": 85,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "null"
        },
        {
          "name": "headerFocused",
          "type": "boolean | null | undefined",
          "description": "Indicates whether the user has engaged with the\nheader/filter component of the column",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 59,
              "column": 3
            },
            "end": {
              "line": 63,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "loading",
          "type": "boolean | null | undefined",
          "description": "Indicate that the column is loading/performing work",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 68,
              "column": 3
            },
            "end": {
              "line": 71,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "bindValues",
          "type": "boolean | null | undefined",
          "description": "Ask for a list of values",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 3
            },
            "end": {
              "line": 80,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "name",
          "type": "string | null | undefined",
          "description": "Column name for use with enabledColumns",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 85,
              "column": 3
            },
            "end": {
              "line": 87,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "values",
          "type": "Array | null | undefined",
          "description": "All values for this column.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 92,
              "column": 3
            },
            "end": {
              "line": 94,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "sortOn",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 96,
              "column": 3
            },
            "end": {
              "line": 99,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "null",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "groupOn",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 101,
              "column": 3
            },
            "end": {
              "line": 104,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "null",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "isOmnitableColumn",
          "type": "boolean | null | undefined",
          "description": "Used to indicate that an element using this behavior is a column definition that can be used\nin cosmoz-omnitable",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 110,
              "column": 3
            },
            "end": {
              "line": 114,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "width",
          "type": "string | null | undefined",
          "description": "Base width of this column.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 119,
              "column": 3
            },
            "end": {
              "line": 122,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"75px\"",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "editWidth",
          "type": "string | null | undefined",
          "description": "Base width of this column when in edit mode.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 127,
              "column": 3
            },
            "end": {
              "line": 130,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"75px\"",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "minWidth",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 3
            },
            "end": {
              "line": 149,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"85px\""
        },
        {
          "name": "editMinWidth",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 3
            },
            "end": {
              "line": 154,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"85px\""
        },
        {
          "name": "flex",
          "type": "string | null | undefined",
          "description": "Width growing factor for this column.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 151,
              "column": 3
            },
            "end": {
              "line": 154,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"1\"",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "cellClass",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 156,
              "column": 3
            },
            "end": {
              "line": 159,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"default-cell\"",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "headerCellClass",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 161,
              "column": 3
            },
            "end": {
              "line": 164,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"default-header-cell\"",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "styleModule",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 166,
              "column": 3
            },
            "end": {
              "line": 168,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "overflow",
          "type": "boolean | null | undefined",
          "description": "Allow column to overflow without triggering\ncolumn folding (good for long descriptions)",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 174,
              "column": 3
            },
            "end": {
              "line": 177,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "priority",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 179,
              "column": 3
            },
            "end": {
              "line": 182,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "0",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "cellTitleFn",
          "type": "Function | null | undefined",
          "description": "Cell title function, can be overriden.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 187,
              "column": 3
            },
            "end": {
              "line": 200,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Function"
            }
          },
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "hidden",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 202,
              "column": 3
            },
            "end": {
              "line": 206,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_hiddenChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "columnIndex",
          "type": "number | null | undefined",
          "description": "Index of this column in the list of displayed columns (excluding disabled/hidden columns).",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 210,
              "column": 3
            },
            "end": {
              "line": 212,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "preferredDropdownHorizontalAlign",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 214,
              "column": 3
            },
            "end": {
              "line": 217,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "ownerTree",
          "type": "CosmozTree | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 3
            },
            "end": {
              "line": 71,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "CosmozTree"
            }
          }
        },
        {
          "name": "locale",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 3
            },
            "end": {
              "line": 90,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "null"
        },
        {
          "name": "showMaxNodes",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 3
            },
            "end": {
              "line": 94,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "showCommonPath",
          "type": "boolean | null | undefined",
          "description": "If displayed node share a common path from root, this property indicates wether this common\npath should be replaced by an ellipsis.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 3
            },
            "end": {
              "line": 103,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "keyProperty",
          "type": "string | null | undefined",
          "description": "Name of the property used to lookup the displayed node in the tree",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 3
            },
            "end": {
              "line": 110,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "valueProperty",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 3
            },
            "end": {
              "line": 115,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"name\""
        },
        {
          "name": "query",
          "type": "string | null | undefined",
          "description": "The value of the `paper-autocomplete` input.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 3
            },
            "end": {
              "line": 122,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_collator",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 3
            },
            "end": {
              "line": 127,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "_hideFromRoot",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 3
            },
            "end": {
              "line": 133,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "_tooltip",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 3
            },
            "end": {
              "line": 138,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_showResultsOnFocus",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 3
            },
            "end": {
              "line": 144,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "queryFn",
          "type": "Function | null | undefined",
          "description": "Function used to filter available items.\nThis function is actually used by `paper-autocomplete`,\nit is also exposed here so it is possible to provide a custom queryFn.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 3
            },
            "end": {
              "line": 207,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Function"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "getTemplateInstance",
          "description": "Creates a new template instance of the required type.\n\nThe light and shadow DOM is searched for templates matching the selector\n`template.<type>`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-templatize-mixin.js",
            "start": {
              "line": 27,
              "column": 1
            },
            "end": {
              "line": 42,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "the type of the template"
            },
            {
              "name": "props",
              "type": "Object",
              "description": "the instance's properties"
            }
          ],
          "return": {
            "type": "TemplateInstance",
            "desc": "the template instance"
          },
          "inheritedFrom": "templatizeMixin"
        },
        {
          "name": "recycleInstance",
          "description": "Marks an instance for re-use.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-templatize-mixin.js",
            "start": {
              "line": 50,
              "column": 1
            },
            "end": {
              "line": 60,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "instance",
              "type": "TemplateInstance",
              "description": "an instance"
            }
          ],
          "return": {
            "type": "TemplateInstance",
            "desc": "the detached instance"
          },
          "inheritedFrom": "templatizeMixin"
        },
        {
          "name": "isRecycledInstance",
          "description": "Tests whether the instance is marked for re-use.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-templatize-mixin.js",
            "start": {
              "line": 67,
              "column": 1
            },
            "end": {
              "line": 69,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "instance",
              "type": "TemplateInstance",
              "description": "an instance"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true if instance is recycled"
          },
          "inheritedFrom": "templatizeMixin"
        },
        {
          "name": "disconnectedCallback",
          "description": "Cleans up references to recycled instances when the element is detached.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-templatize-mixin.js",
            "start": {
              "line": 76,
              "column": 1
            },
            "end": {
              "line": 79,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "templatizeMixin"
        },
        {
          "name": "_reuseInstance",
          "description": "Reuses an already created instance.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-templatize-mixin.js",
            "start": {
              "line": 88,
              "column": 1
            },
            "end": {
              "line": 102,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "instance",
              "type": "TemplateInstance",
              "description": "an instance"
            },
            {
              "name": "props",
              "type": "Object",
              "description": "the instances properties"
            }
          ],
          "return": {
            "type": "TemplateInstance",
            "desc": "the instance"
          },
          "inheritedFrom": "templatizeMixin"
        },
        {
          "name": "_createInstance",
          "description": "Creates a new instance of the required type.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-templatize-mixin.js",
            "start": {
              "line": 111,
              "column": 1
            },
            "end": {
              "line": 117,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "the type of the template"
            },
            {
              "name": "props",
              "type": "Object",
              "description": "the instance's properies"
            }
          ],
          "return": {
            "type": "TemplateInstance",
            "desc": "the instance"
          },
          "inheritedFrom": "templatizeMixin"
        },
        {
          "name": "_getTemplateCtor",
          "description": "Searches for a template node of the required type and templatizes it.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-templatize-mixin.js",
            "start": {
              "line": 126,
              "column": 1
            },
            "end": {
              "line": 148,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "the type of the template"
            }
          ],
          "return": {
            "type": "TemplateInstanceBase",
            "desc": "the templatized template"
          },
          "inheritedFrom": "templatizeMixin"
        },
        {
          "name": "_forwardHostProp",
          "description": "Generates a function that forwards properties to instances of a certain type.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-templatize-mixin.js",
            "start": {
              "line": 156,
              "column": 1
            },
            "end": {
              "line": 172,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "the type of the template"
            }
          ],
          "return": {
            "type": "Function",
            "desc": "a function that forwards props to instances"
          },
          "inheritedFrom": "templatizeMixin"
        },
        {
          "name": "_forwardProperty",
          "description": "Forward one property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-templatize-mixin.js",
            "start": {
              "line": 182,
              "column": 1
            },
            "end": {
              "line": 188,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "instance",
              "type": "object",
              "description": "Instance."
            },
            {
              "name": "name",
              "type": "string",
              "description": "Property name."
            },
            {
              "name": "value",
              "type": "any",
              "description": "Property value."
            },
            {
              "name": "flush",
              "type": "boolean",
              "defaultValue": "false",
              "description": "Whether to flush properties."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "templatizeMixin"
        },
        {
          "name": "_forwardProperties",
          "description": "Forward many properties.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-templatize-mixin.js",
            "start": {
              "line": 197,
              "column": 1
            },
            "end": {
              "line": 203,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "instance",
              "type": "object",
              "description": "Instance."
            },
            {
              "name": "props",
              "type": "object",
              "defaultValue": "{}",
              "description": "Properties to forward."
            },
            {
              "name": "flush",
              "type": "boolean",
              "defaultValue": "true",
              "description": "Whether to flush properties."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "templatizeMixin"
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 228,
              "column": 1
            },
            "end": {
              "line": 231,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "_externalValuesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 233,
              "column": 1
            },
            "end": {
              "line": 244,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newExternalValuesValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "_computePreferredDropdownHorizontalAlign",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 250,
              "column": 1
            },
            "end": {
              "line": 252,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "columnIndex"
            }
          ],
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "getString",
          "description": "Get column represented as a string.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 287,
              "column": 1
            },
            "end": {
              "line": 289,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "object",
              "description": "Column data."
            },
            {
              "name": "valuePath",
              "type": "string",
              "description": "Value path in column data."
            }
          ],
          "return": {
            "type": "(void | string)",
            "desc": "Column in string format."
          }
        },
        {
          "name": "toXlsxValue",
          "description": "Get column content as an XLSX value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 323,
              "column": 1
            },
            "end": {
              "line": 328,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "object",
              "description": "Column data."
            },
            {
              "name": "valuePath",
              "type": "string",
              "defaultValue": "this.valuePath",
              "description": "Value path in column data."
            }
          ],
          "return": {
            "type": "string",
            "desc": "Column in XLSX value format."
          }
        },
        {
          "name": "_pathsChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 267,
              "column": 1
            },
            "end": {
              "line": 279,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valuePath"
            },
            {
              "name": "groupOn"
            },
            {
              "name": "sortOn"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "getComparableValue",
          "description": "Get a comparable value from the column.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 263,
              "column": 1
            },
            "end": {
              "line": 269,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "object",
              "description": "Column data."
            },
            {
              "name": "valuePath",
              "type": "string",
              "description": "Value path in column data."
            }
          ],
          "return": {
            "type": "(void | string)",
            "desc": "Column data in a comparable format."
          }
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 285,
              "column": 1
            },
            "end": {
              "line": 293,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "_fireItemChangeEvent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 295,
              "column": 1
            },
            "end": {
              "line": 305,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            },
            {
              "name": "valuePath"
            },
            {
              "name": "oldValue"
            },
            {
              "name": "formatFn"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "getFilterFn",
          "description": "Get a filter function for the column.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 275,
              "column": 1
            },
            "end": {
              "line": 280,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(void | function)",
            "desc": "Filter function."
          }
        },
        {
          "name": "resetFilter",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 320,
              "column": 1
            },
            "end": {
              "line": 322,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "hasFilter",
          "description": "Returns whether `filterNotify.base` or `filter` is set to a usable value.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 329,
              "column": 1
            },
            "end": {
              "line": 346,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "filterNotify",
              "type": "(Object | void)",
              "description": "filter.*"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if filter or filterNotify.base is set"
          },
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "_getDefaultFilter",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 348,
              "column": 1
            },
            "end": {
              "line": 355,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "_applySingleFilter",
          "description": "Determine if a filter should be enabled or not.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 296,
              "column": 1
            },
            "end": {
              "line": 298,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "filter",
              "type": "string",
              "description": "Filter text."
            },
            {
              "name": "item",
              "type": "object",
              "description": "Column data."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "Whether the filter should be enabled or not."
          }
        },
        {
          "name": "_applyMultiFilter",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 365,
              "column": 1
            },
            "end": {
              "line": 370,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "filter"
            },
            {
              "name": "item"
            }
          ],
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "_titleChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 372,
              "column": 1
            },
            "end": {
              "line": 374,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "_hiddenChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 376,
              "column": 1
            },
            "end": {
              "line": 378,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "_disabledChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 379,
              "column": 1
            },
            "end": {
              "line": 381,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "_editableChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 383,
              "column": 1
            },
            "end": {
              "line": 385,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "__filterChanged",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 387,
              "column": 1
            },
            "end": {
              "line": 389,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "_serializeFilter",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 378,
              "column": 1
            },
            "end": {
              "line": 380,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "filter",
              "defaultValue": "this.filter"
            }
          ]
        },
        {
          "name": "_deserializeFilter",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 393,
              "column": 1
            },
            "end": {
              "line": 395,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "obj"
            }
          ]
        },
        {
          "name": "_computeSuggestionList",
          "description": "Get a list of suggestions for the column header.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 223,
              "column": 1
            },
            "end": {
              "line": 235,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "values",
              "type": "array",
              "description": "Suggestion values."
            },
            {
              "name": "collator",
              "type": "object",
              "description": "Language sensitive string comparison object."
            },
            {
              "name": "ownerTree",
              "type": "object",
              "defaultValue": "this.ownerTree",
              "description": "Owner tree to get texts from."
            }
          ],
          "return": {
            "type": "array",
            "desc": "Suggestions remapped for the column header."
          }
        },
        {
          "name": "_computeCollator",
          "description": "Get a language sensitive string comparison object.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 1
            },
            "end": {
              "line": 243,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale",
              "type": "string",
              "description": "Current locale."
            }
          ],
          "return": {
            "type": "object",
            "desc": "Collator."
          }
        },
        {
          "name": "_computeTooltip",
          "description": "Get a tooltip text for the column.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 251,
              "column": 1
            },
            "end": {
              "line": 256,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "filter",
              "type": "string",
              "description": "Filter text."
            },
            {
              "name": "ownerTree",
              "type": "object",
              "defaultValue": "this.ownerTree",
              "description": "Owner tree to get tooltip text from."
            }
          ],
          "return": {
            "type": "string",
            "desc": "Tooltip text."
          }
        },
        {
          "name": "getPathByProperty",
          "description": "HACK(pasleq): Cosmoz.Tree API needs to be fixed to avoid such code in components",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 301,
              "column": 1
            },
            "end": {
              "line": 316,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "propertyName"
            },
            {
              "name": "propertyValue"
            },
            {
              "name": "ownerTree",
              "defaultValue": "this.ownerTree"
            }
          ]
        },
        {
          "name": "_computeHideFromRoot",
          "description": "Get a number of nodes that should not be rendered starting from root.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 336,
              "column": 1
            },
            "end": {
              "line": 361,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "showCommonPath",
              "type": "boolean",
              "description": "Show common node path or not."
            },
            {
              "name": "values",
              "type": "array",
              "description": "Nodes."
            },
            {
              "name": "ownerTree",
              "type": "object",
              "description": "Owner tree to get paths data from."
            }
          ],
          "return": {
            "type": "number",
            "desc": "Node amount not to render."
          }
        },
        {
          "name": "_computeReadOnly",
          "description": "Determine if filter should be read only or not.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 367,
              "column": 1
            },
            "end": {
              "line": 369,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "filter",
              "type": "string",
              "description": "Filter text."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "Whether filter should be read only or not."
          }
        },
        {
          "name": "_computeShowResultsOnFocus",
          "description": "Determine if results should be shown on focus or not.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 375,
              "column": 1
            },
            "end": {
              "line": 377,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "filter",
              "type": "string",
              "description": "Filter text."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "Whether results should be shown on focus or not."
          }
        },
        {
          "name": "_setQueryByPath",
          "description": "Set the query by using a path, this sets the initial header filter text of the column.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 387,
              "column": 1
            },
            "end": {
              "line": 392,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "string",
              "description": "Path to set."
            },
            {
              "name": "ownerTree",
              "type": "object",
              "defaultValue": "this.ownerTree",
              "description": "Owner tree to get texts from."
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 22,
          "column": 0
        },
        "end": {
          "line": 396,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "CosmozOmnitableTreenodeColumn",
      "attributes": [
        {
          "name": "title",
          "description": "",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 12,
              "column": 3
            },
            "end": {
              "line": 15,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "value-path",
          "description": "",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 17,
              "column": 3
            },
            "end": {
              "line": 19,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "disabled",
          "description": "If the column should be disabled until enabled with enabledColumns",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 24,
              "column": 3
            },
            "end": {
              "line": 28,
              "column": 4
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "editable",
          "description": "If true, the column will be editable by using an input element for rendering.",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 33,
              "column": 3
            },
            "end": {
              "line": 36,
              "column": 4
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "external-values",
          "description": "Values to filter this column will be managed outside of omnitable",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 41,
              "column": 3
            },
            "end": {
              "line": 45,
              "column": 4
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "filter",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 3
            },
            "end": {
              "line": 85,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "header-focused",
          "description": "Indicates whether the user has engaged with the\nheader/filter component of the column",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 59,
              "column": 3
            },
            "end": {
              "line": 63,
              "column": 4
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "loading",
          "description": "Indicate that the column is loading/performing work",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 68,
              "column": 3
            },
            "end": {
              "line": 71,
              "column": 4
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "bind-values",
          "description": "Ask for a list of values",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 3
            },
            "end": {
              "line": 80,
              "column": 4
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "name",
          "description": "Column name for use with enabledColumns",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 85,
              "column": 3
            },
            "end": {
              "line": 87,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "values",
          "description": "All values for this column.",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 92,
              "column": 3
            },
            "end": {
              "line": 94,
              "column": 4
            }
          },
          "metadata": {},
          "type": "Array | null | undefined",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "sort-on",
          "description": "",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 96,
              "column": 3
            },
            "end": {
              "line": 99,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "group-on",
          "description": "",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 101,
              "column": 3
            },
            "end": {
              "line": 104,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "is-omnitable-column",
          "description": "Used to indicate that an element using this behavior is a column definition that can be used\nin cosmoz-omnitable",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 110,
              "column": 3
            },
            "end": {
              "line": 114,
              "column": 4
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "width",
          "description": "Base width of this column.",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 119,
              "column": 3
            },
            "end": {
              "line": 122,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "edit-width",
          "description": "Base width of this column when in edit mode.",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 127,
              "column": 3
            },
            "end": {
              "line": 130,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "min-width",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 3
            },
            "end": {
              "line": 149,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "edit-min-width",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 3
            },
            "end": {
              "line": 154,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "flex",
          "description": "Width growing factor for this column.",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 151,
              "column": 3
            },
            "end": {
              "line": 154,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "cell-class",
          "description": "",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 156,
              "column": 3
            },
            "end": {
              "line": 159,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "header-cell-class",
          "description": "",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 161,
              "column": 3
            },
            "end": {
              "line": 164,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "style-module",
          "description": "",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 166,
              "column": 3
            },
            "end": {
              "line": 168,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "overflow",
          "description": "Allow column to overflow without triggering\ncolumn folding (good for long descriptions)",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 174,
              "column": 3
            },
            "end": {
              "line": 177,
              "column": 4
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "priority",
          "description": "",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 179,
              "column": 3
            },
            "end": {
              "line": 182,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "cell-title-fn",
          "description": "Cell title function, can be overriden.",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 187,
              "column": 3
            },
            "end": {
              "line": 200,
              "column": 4
            }
          },
          "metadata": {},
          "type": "Function | null | undefined",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "hidden",
          "description": "",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 202,
              "column": 3
            },
            "end": {
              "line": 206,
              "column": 4
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "column-index",
          "description": "Index of this column in the list of displayed columns (excluding disabled/hidden columns).",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 210,
              "column": 3
            },
            "end": {
              "line": 212,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "preferred-dropdown-horizontal-align",
          "description": "",
          "sourceRange": {
            "file": "../@neovici/cosmoz-omnitable/cosmoz-omnitable-column-mixin.js",
            "start": {
              "line": 214,
              "column": 3
            },
            "end": {
              "line": 217,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "columnMixin"
        },
        {
          "name": "owner-tree",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 3
            },
            "end": {
              "line": 71,
              "column": 4
            }
          },
          "metadata": {},
          "type": "CosmozTree | null | undefined"
        },
        {
          "name": "locale",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 3
            },
            "end": {
              "line": 90,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "show-max-nodes",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 3
            },
            "end": {
              "line": 94,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "show-common-path",
          "description": "If displayed node share a common path from root, this property indicates wether this common\npath should be replaced by an ellipsis.",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 3
            },
            "end": {
              "line": 103,
              "column": 4
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "key-property",
          "description": "Name of the property used to lookup the displayed node in the tree",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 3
            },
            "end": {
              "line": 110,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value-property",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 3
            },
            "end": {
              "line": 115,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "query",
          "description": "The value of the `paper-autocomplete` input.",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 3
            },
            "end": {
              "line": 122,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "query-fn",
          "description": "Function used to filter available items.\nThis function is actually used by `paper-autocomplete`,\nit is also exposed here so it is possible to provide a custom queryFn.",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 3
            },
            "end": {
              "line": 207,
              "column": 4
            }
          },
          "metadata": {},
          "type": "Function | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "cosmoz-omnitable-treenode-column",
      "mixins": [
        "columnMixin"
      ]
    }
  ]
}
